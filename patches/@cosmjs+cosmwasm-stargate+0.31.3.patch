diff --git a/node_modules/@cosmjs/cosmwasm-stargate/build/cosmwasmclient.d.ts b/node_modules/@cosmjs/cosmwasm-stargate/build/cosmwasmclient.d.ts
index 3aebdc5..d5cbeec 100644
--- a/node_modules/@cosmjs/cosmwasm-stargate/build/cosmwasmclient.d.ts
+++ b/node_modules/@cosmjs/cosmwasm-stargate/build/cosmwasmclient.d.ts
@@ -56,6 +56,7 @@ export declare class CosmWasmClient {
      */
     static create(tmClient: TendermintClient): Promise<CosmWasmClient>;
     protected constructor(tmClient: TendermintClient | undefined);
+    public setQueryClientWithHeight(height?: number): void;
     protected getTmClient(): TendermintClient | undefined;
     protected forceGetTmClient(): TendermintClient;
     protected getQueryClient(): (QueryClient & AuthExtension & BankExtension & TxExtension & WasmExtension) | undefined;
diff --git a/node_modules/@cosmjs/cosmwasm-stargate/build/cosmwasmclient.js b/node_modules/@cosmjs/cosmwasm-stargate/build/cosmwasmclient.js
index 8f6305b..90cedba 100644
--- a/node_modules/@cosmjs/cosmwasm-stargate/build/cosmwasmclient.js
+++ b/node_modules/@cosmjs/cosmwasm-stargate/build/cosmwasmclient.js
@@ -46,6 +46,13 @@ class CosmWasmClient {
             this.queryClient = stargate_1.QueryClient.withExtensions(tmClient, stargate_1.setupAuthExtension, stargate_1.setupBankExtension, modules_1.setupWasmExtension, stargate_1.setupTxExtension);
         }
     }
+
+    setQueryClientWithHeight(height = undefined) {
+        if (this.tmClient) {
+            this.queryClient = stargate_1.QueryClient.withExtensionsWithHeight(this.tmClient, height, stargate_1.setupAuthExtension, stargate_1.setupBankExtension, modules_1.setupWasmExtension, stargate_1.setupTxExtension);
+        }
+    }
+
     getTmClient() {
         return this.tmClient;
     }
diff --git a/node_modules/@cosmjs/cosmwasm-stargate/build/modules/wasm/queries.js b/node_modules/@cosmjs/cosmwasm-stargate/build/modules/wasm/queries.js
index c060369..41029c3 100644
--- a/node_modules/@cosmjs/cosmwasm-stargate/build/modules/wasm/queries.js
+++ b/node_modules/@cosmjs/cosmwasm-stargate/build/modules/wasm/queries.js
@@ -8,8 +8,8 @@ const encoding_1 = require("@cosmjs/encoding");
 const stargate_1 = require("@cosmjs/stargate");
 const query_1 = require("cosmjs-types/cosmwasm/wasm/v1/query");
 const long_1 = __importDefault(require("long"));
-function setupWasmExtension(base) {
-    const rpc = (0, stargate_1.createProtobufRpcClient)(base);
+function setupWasmExtension(base, height) {
+    const rpc = (0, stargate_1.createProtobufRpcClient)(base, height);
     // Use this service to get easy typed access to query methods
     // This cannot be used for proof verification
     const queryService = new query_1.QueryClientImpl(rpc);
