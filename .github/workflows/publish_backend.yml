name: Build and push executor to Docker Hub

on:
  workflow_dispatch:
    branches:
      - master
      - staging

  push:
    tags:
      - "v*"
      - "v*-beta"

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  docker:
    strategy:
      matrix:
        node: ["18.18.0"]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            oraichain/defi_oraidex-backend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,enable=true,priority=100,prefix=,suffix=,format=short

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: |
            GIT_COMMIT=${{ env.GIT_COMMIT }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: .
          cache-from: type=registry,ref=oraichain/defi_oraidex-backend:buildcache
          cache-to: type=registry,ref=oraichain/defi_oraidex-backend:buildcache,mode=max
          platforms: linux/amd64,linux/arm64

  swarm:
    runs-on: ubuntu-20.04
    needs: docker
    steps:
      - name: Extract SHA
        id: extract_sha
        run: echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Check outputs
        run: echo ${{ steps.extract_sha.outputs.short_sha}}

      - name: Set environment
        id: set_environment
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          set -e
          if [[ $GITHUB_REF_NAME == 'master' || ! $GITHUB_REF_NAME  =~ 'beta' ]]
          then
          echo deploy_environment='production' >> $GITHUB_OUTPUT
          else
          echo deploy_environment='staging' >> $GITHUB_OUTPUT;
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check exist images
        run: |
          docker manifest inspect oraichain/defi_oraidex-backend:${{ steps.extract_sha.outputs.short_sha }}

      - name: Deploy to Swarm (staging)
        if: ${{ steps.set_environment.outputs.deploy_environment == 'staging'}}
        run: |
          curl -X POST \
           ${{ secrets.STAGING_WEBHOOK_SERVICE }}?tag=${{ steps.extract_sha.outputs.short_sha }}

      - name: Deploy to Swarm
        if: ${{ steps.set_environment.outputs.deploy_environment == 'production'}}
        run: |
          curl -X POST \
           ${{ secrets.WEBHOOK_SERVICE }}?tag=${{ steps.extract_sha.outputs.short_sha }}

      - name: Send discord message
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          username: "GitBot"
          message: "[${{ steps.set_environment.outputs.deploy_environment }}] Repo oraidex-backend has just deployed to swarm with tag: ${{ steps.extract_sha.outputs.short_sha }}"
